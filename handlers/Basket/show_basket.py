from aiogram import types, F
from aiogram.types import InputMediaPhoto, FSInputFile
from asgiref.sync import sync_to_async

from handlers.routes import router
from aiogram.fsm.context import FSMContext

from basket.models import Basket
from products.models import Product
from keyboards.menu.main_menu import InlineKeyboardBuilder


async def get_user_basket(telegram_id):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ Telegram ID —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏"""
    return await sync_to_async(
        lambda: list(Basket.objects.select_related("product").filter(telegram_id=telegram_id))
    )()


@router.callback_query(F.data == 'second_block')
async def show_user_cart(callback: types.CallbackQuery, state: FSMContext):
    """ –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ """
    user_id = callback.from_user.id

    basket_items = await get_user_basket(user_id)  # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã

    if not basket_items:
        await callback.message.answer("üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!")
        return

    # –°–æ–∑–¥–∞—ë–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
    description = "üõç <b>–í–∞—à–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:</b>\n\n"
    total_price = sum(item.total_price for item in basket_items)  # –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É
    buttons = []

    for idx, item in enumerate(basket_items, 1):
        product_name = item.product.name  # –¢–µ–ø–µ—Ä—å product —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
        description += f"{idx}. <b>{product_name}</b> ‚Äî {item.count} —à—Ç. ‚Äî {item.total_price} —Ä—É–±.\n"

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–∞
        buttons.append(types.InlineKeyboardButton(
            text=f"{idx} - –ò–∑–º–µ–Ω–∏—Ç—å {product_name}", callback_data=f"select_product_{item.product.id}"
        ))


    description += f"\n<b>–ò—Ç–æ–≥–æ:</b> {total_price} —Ä—É–±."

    # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–≤–æ–π —Å—Ç–∞—Ç–∏—á–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ñ–æ—Ç–æ (–∏–∑–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å)
    file_path = "bot/assets/images/computers.png"

    # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    builder = InlineKeyboardBuilder()
    for btn in buttons:
        builder.row(btn)
    builder.row(
        types.InlineKeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="back"),
        types.InlineKeyboardButton(text="üìã –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="accept_order")
    )

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
    await callback.message.edit_media(
        media=InputMediaPhoto(
            media=FSInputFile(file_path),
            caption=description
        ),
        reply_markup=builder.as_markup()
    )
